// <auto-generated>
/*
 * Hetzner Cloud API
 *
 * Copied from the official API documentation for the Public Hetzner Cloud.
 *
 * The version of the OpenAPI document: 0.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization.Metadata;
using Hetzner.Cloud.Client;

namespace Hetzner.Cloud.Model
{
    /// <summary>
    /// Response to POST https://api.hetzner.cloud/v1/placement_groups
    /// </summary>
    internal partial class CreatePlacementgroupResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreatePlacementgroupResponse" /> class.
        /// </summary>
        /// <param name="placementGroup">placementGroup</param>
        /// <param name="action">action</param>
        [JsonConstructor]
        internal CreatePlacementgroupResponse(PlacementGroup placementGroup, Option<ActionOptional?> action = default)
        {
            PlacementGroup = placementGroup;
            ActionOption = action;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Gets or Sets PlacementGroup
        /// </summary>
        [JsonPropertyName("placement_group")]
        public PlacementGroup PlacementGroup { get; set; }

        /// <summary>
        /// Used to track the state of Action
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<ActionOptional?> ActionOption { get; private set; }

        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [JsonPropertyName("action")]
        public ActionOptional? Action { get { return this.ActionOption; } set { this.ActionOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreatePlacementgroupResponse {\n");
            sb.Append("  PlacementGroup: ").Append(PlacementGroup).Append("\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="CreatePlacementgroupResponse" />
    /// </summary>
    internal class CreatePlacementgroupResponseJsonConverter : JsonConverter<CreatePlacementgroupResponse>
    {
        /// <summary>
        /// Deserializes json to <see cref="CreatePlacementgroupResponse" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override CreatePlacementgroupResponse Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<PlacementGroup?> placementGroup = default;
            Option<ActionOptional?> action = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "placement_group":
                            placementGroup = new Option<PlacementGroup?>(JsonSerializer.Deserialize<PlacementGroup>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "action":
                            action = new Option<ActionOptional?>(JsonSerializer.Deserialize<ActionOptional>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!placementGroup.IsSet)
                throw new ArgumentException("Property is required for class CreatePlacementgroupResponse.", nameof(placementGroup));

            if (placementGroup.IsSet && placementGroup.Value == null)
                throw new ArgumentNullException(nameof(placementGroup), "Property is not nullable for class CreatePlacementgroupResponse.");

            return new CreatePlacementgroupResponse(placementGroup.Value!, action);
        }

        /// <summary>
        /// Serializes a <see cref="CreatePlacementgroupResponse" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="createPlacementgroupResponse"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, CreatePlacementgroupResponse createPlacementgroupResponse, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, createPlacementgroupResponse, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="CreatePlacementgroupResponse" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="createPlacementgroupResponse"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, CreatePlacementgroupResponse createPlacementgroupResponse, JsonSerializerOptions jsonSerializerOptions)
        {
            if (createPlacementgroupResponse.PlacementGroup == null)
                throw new ArgumentNullException(nameof(createPlacementgroupResponse.PlacementGroup), "Property is required for class CreatePlacementgroupResponse.");

            writer.WritePropertyName("placement_group");
            JsonSerializer.Serialize(writer, createPlacementgroupResponse.PlacementGroup, jsonSerializerOptions);
            if (createPlacementgroupResponse.ActionOption.IsSet)
                if (createPlacementgroupResponse.ActionOption.Value != null)
                {
                    writer.WritePropertyName("action");
                    JsonSerializer.Serialize(writer, createPlacementgroupResponse.Action, jsonSerializerOptions);
                }
                else
                    writer.WriteNull("action");
        }
    }

    /// <summary>
    /// The CreatePlacementgroupResponseSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(CreatePlacementgroupResponse))]
    internal partial class CreatePlacementgroupResponseSerializationContext : JsonSerializerContext { }
}
