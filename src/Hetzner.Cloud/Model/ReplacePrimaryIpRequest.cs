// <auto-generated>
/*
 * Hetzner Cloud API
 *
 * Copied from the official API documentation for the Public Hetzner Cloud.
 *
 * The version of the OpenAPI document: 0.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization.Metadata;
using Hetzner.Cloud.Client;

namespace Hetzner.Cloud.Model
{
    /// <summary>
    /// Request for PUT https://api.hetzner.cloud/v1/primary_ips/{id}
    /// </summary>
    public partial class ReplacePrimaryIpRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReplacePrimaryIpRequest" /> class.
        /// </summary>
        /// <param name="autoDelete">Auto deletion state.  If enabled the [Primary IP](#primary-ips) will be deleted once the assigned resource gets deleted.  (default to false)</param>
        /// <param name="labels">User-defined labels (&#x60;key/value&#x60; pairs) for the Resource. For more information, see \&quot;[Labels](#labels)\&quot;. </param>
        /// <param name="name">Name of the Resource. Must be unique per Project.</param>
        [JsonConstructor]
        public ReplacePrimaryIpRequest(Option<bool?> autoDelete = default, Option<Dictionary<string, string>?> labels = default, Option<string?> name = default)
        {
            AutoDeleteOption = autoDelete;
            LabelsOption = labels;
            NameOption = name;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of AutoDelete
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> AutoDeleteOption { get; private set; }

        /// <summary>
        /// Auto deletion state.  If enabled the [Primary IP](#primary-ips) will be deleted once the assigned resource gets deleted. 
        /// </summary>
        /// <value>Auto deletion state.  If enabled the [Primary IP](#primary-ips) will be deleted once the assigned resource gets deleted. </value>
        /* <example>true</example> */
        [JsonPropertyName("auto_delete")]
        public bool? AutoDelete { get { return this.AutoDeleteOption; } set { this.AutoDeleteOption = new(value); } }

        /// <summary>
        /// Used to track the state of Labels
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Dictionary<string, string>?> LabelsOption { get; private set; }

        /// <summary>
        /// User-defined labels (&#x60;key/value&#x60; pairs) for the Resource. For more information, see \&quot;[Labels](#labels)\&quot;. 
        /// </summary>
        /// <value>User-defined labels (&#x60;key/value&#x60; pairs) for the Resource. For more information, see \&quot;[Labels](#labels)\&quot;. </value>
        /* <example>{&quot;environment&quot;:&quot;prod&quot;,&quot;example.com/my&quot;:&quot;label&quot;,&quot;just-a-key&quot;:&quot;&quot;}</example> */
        [JsonPropertyName("labels")]
        public Dictionary<string, string>? Labels { get { return this.LabelsOption; } set { this.LabelsOption = new(value); } }

        /// <summary>
        /// Used to track the state of Name
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> NameOption { get; private set; }

        /// <summary>
        /// Name of the Resource. Must be unique per Project.
        /// </summary>
        /// <value>Name of the Resource. Must be unique per Project.</value>
        /* <example>my-resource</example> */
        [JsonPropertyName("name")]
        public string? Name { get { return this.NameOption; } set { this.NameOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReplacePrimaryIpRequest {\n");
            sb.Append("  AutoDelete: ").Append(AutoDelete).Append("\n");
            sb.Append("  Labels: ").Append(Labels).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="ReplacePrimaryIpRequest" />
    /// </summary>
    public class ReplacePrimaryIpRequestJsonConverter : JsonConverter<ReplacePrimaryIpRequest>
    {
        /// <summary>
        /// Deserializes json to <see cref="ReplacePrimaryIpRequest" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override ReplacePrimaryIpRequest Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<bool?> autoDelete = default;
            Option<Dictionary<string, string>?> labels = default;
            Option<string?> name = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "auto_delete":
                            autoDelete = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "labels":
                            labels = new Option<Dictionary<string, string>?>(JsonSerializer.Deserialize<Dictionary<string, string>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "name":
                            name = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (autoDelete.IsSet && autoDelete.Value == null)
                throw new ArgumentNullException(nameof(autoDelete), "Property is not nullable for class ReplacePrimaryIpRequest.");

            if (labels.IsSet && labels.Value == null)
                throw new ArgumentNullException(nameof(labels), "Property is not nullable for class ReplacePrimaryIpRequest.");

            if (name.IsSet && name.Value == null)
                throw new ArgumentNullException(nameof(name), "Property is not nullable for class ReplacePrimaryIpRequest.");

            return new ReplacePrimaryIpRequest(autoDelete, labels, name);
        }

        /// <summary>
        /// Serializes a <see cref="ReplacePrimaryIpRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="replacePrimaryIpRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, ReplacePrimaryIpRequest replacePrimaryIpRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, replacePrimaryIpRequest, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="ReplacePrimaryIpRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="replacePrimaryIpRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, ReplacePrimaryIpRequest replacePrimaryIpRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            if (replacePrimaryIpRequest.LabelsOption.IsSet && replacePrimaryIpRequest.Labels == null)
                throw new ArgumentNullException(nameof(replacePrimaryIpRequest.Labels), "Property is required for class ReplacePrimaryIpRequest.");

            if (replacePrimaryIpRequest.NameOption.IsSet && replacePrimaryIpRequest.Name == null)
                throw new ArgumentNullException(nameof(replacePrimaryIpRequest.Name), "Property is required for class ReplacePrimaryIpRequest.");

            if (replacePrimaryIpRequest.AutoDeleteOption.IsSet)
                writer.WriteBoolean("auto_delete", replacePrimaryIpRequest.AutoDeleteOption.Value!.Value);

            if (replacePrimaryIpRequest.LabelsOption.IsSet)
            {
                writer.WritePropertyName("labels");
                JsonSerializer.Serialize(writer, replacePrimaryIpRequest.Labels, jsonSerializerOptions);
            }
            if (replacePrimaryIpRequest.NameOption.IsSet)
                writer.WriteString("name", replacePrimaryIpRequest.Name);
        }
    }

    /// <summary>
    /// The ReplacePrimaryIpRequestSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(ReplacePrimaryIpRequest))]
    public partial class ReplacePrimaryIpRequestSerializationContext : JsonSerializerContext { }
}
